/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package service_builder.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the Driver service. Represents a row in the &quot;service_builder_Driver&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link service_builder.model.impl.DriverModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link service_builder.model.impl.DriverImpl}.
 * </p>
 *
 * @author Romanova
 * @see Driver
 * @see service_builder.model.impl.DriverImpl
 * @see service_builder.model.impl.DriverModelImpl
 * @generated
 */
@ProviderType
public interface DriverModel extends BaseModel<Driver> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a driver model instance should use the {@link Driver} interface instead.
	 */

	/**
	 * Returns the primary key of this driver.
	 *
	 * @return the primary key of this driver
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this driver.
	 *
	 * @param primaryKey the primary key of this driver
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this driver.
	 *
	 * @return the uuid of this driver
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this driver.
	 *
	 * @param uuid the uuid of this driver
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the driver ID of this driver.
	 *
	 * @return the driver ID of this driver
	 */
	public long getDriverId();

	/**
	 * Sets the driver ID of this driver.
	 *
	 * @param driverId the driver ID of this driver
	 */
	public void setDriverId(long driverId);

	/**
	 * Returns the driver name of this driver.
	 *
	 * @return the driver name of this driver
	 */
	@AutoEscape
	public String getDriverName();

	/**
	 * Sets the driver name of this driver.
	 *
	 * @param driverName the driver name of this driver
	 */
	public void setDriverName(String driverName);

	/**
	 * Returns the description of this driver.
	 *
	 * @return the description of this driver
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this driver.
	 *
	 * @param description the description of this driver
	 */
	public void setDescription(String description);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(service_builder.model.Driver driver);

	@Override
	public int hashCode();

	@Override
	public CacheModel<service_builder.model.Driver> toCacheModel();

	@Override
	public service_builder.model.Driver toEscapedModel();

	@Override
	public service_builder.model.Driver toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}